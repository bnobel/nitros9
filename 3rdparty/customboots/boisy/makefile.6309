# NitrOS-9/6309 Level 2 bootfile for a 128K CoCo 3 with a Hitatchi 6309
# For Boisy's thesis work

include $(NITROS9DIR)/rules.mak

vpath %.asm ../../../utils/boisy:..:$(LEVEL2)/cmds:$(LEVEL1)/cmds:$(LEVEL1)/modules:$(NITROS9DIR)/3rdparty/packages/basic09

AFLAGS		+= -aNoTerm=1 -acoco3=1

LFLAGS		+= -y -l=$(NITROS9DIR)/3rdparty/libs/alib/alib.l -l=$(NITROS9DIR)/lib/sys6309l2.l 
3PDW63          = $(3RDPARTY)/packages/drivewire/6309l2
3PBOISY         = $(3RDPARTY)/utils/boisy

DEPENDS		= ./makefile

#AFLAGS          += -e -aH6309=1

DSK 		= thesis.dsk
CD		= $(LEVEL2)/coco3_6309/cmds
MD		= $(LEVEL2)/coco3_6309/modules
SYSTEXT		= motd password inetd.conf
DSKS		= $(DSK)

CMDS		= $(CD)/attr $(CD)/build $(CD)/cmp $(CD)/copy $(CD)/cputype $(CD)/date $(CD)/debug \
		$(CD)/deiniz $(CD)/del $(CD)/deldir $(CD)/devs $(CD)/dir $(CD)/display \
		$(CD)/dmem $(CD)/dmode $(CD)/dump $(CD)/echo $(CD)/edit $(CD)/error \
		$(CD)/free $(CD)/grfdrv $(CD)/help $(CD)/ident $(CD)/iniz $(CD)/link \
		$(CD)/list $(CD)/load $(CD)/login $(CD)/makdir $(CD)/mdir $(CD)/merge \
                $(CD)/mfree $(CD)/mmap $(CD)/mpi $(CD)/pmap $(CD)/proc $(CD)/procs \
		$(CD)/prompt $(CD)/pwd $(CD)/pxd $(CD)/rename $(CD)/save $(CD)/shell \
		$(CD)/sleep $(CD)/smap $(CD)/tee $(CD)/tmode $(CD)/touch $(CD)/tsmon \
		$(CD)/unlink $(CD)/verify $(CD)/xmode $(CD)/utilpak1 $(CD)/basic09 $(CD)/syscall

CMDS_DW		= $(3PDW63)/inetd $(3PDW63)/dw \
		$(3PDW63)/telnet $(3PBOISY)/send

CMDS_THESIS	= testmisc testmul testdivq testtfr testexg testadd testnop testsync testlda teststa testlbra
SRC_THESIS	= testmisc.a testmul.a testdivq.a testtfr.a testexg.a testadd.a testnop.a testsync.a testlda.a teststa.a testlbra.a

# We make our own bootfile and kernel track
KERNEL		= $(MD)/rel_80 $(MD)/boot_dw $(MD)/krn
BOOTFILE_DWTERM	= $(MD)/krnp2 $(MD)/ioman $(MD)/init \
		$(MD)/rbf.mn \
		$(MD)/rbdw.dr $(MD)/dwio.sb \
		$(MD)/rammer.dr $(MD)/r0_128k.dd \
		$(MD)/ddx0.dd $(MD)/x1.dd $(MD)/x2.dd $(MD)/x3.dd \
		$(MD)/scf.mn \
		$(MD)/sc6551.dr $(MD)/t2_sc6551.dd $(MD)/t3_sc6551.dd \
		$(MD)/scdwn.dr $(MD)/term_scdwn.dt \
		$(MD)/n_scdwn.dd \
		$(MD)/n1_scdwn.dd $(MD)/n2_scdwn.dd $(MD)/n3_scdwn.dd \
		$(MD)/n4_scdwn.dd $(MD)/n5_scdwn.dd $(MD)/n6_scdwn.dd \
		$(MD)/n7_scdwn.dd $(MD)/n8_scdwn.dd $(MD)/n9_scdwn.dd \
		$(MD)/n10_scdwn.dd $(MD)/n11_scdwn.dd $(MD)/n12_scdwn.dd \
		$(MD)/n13_scdwn.dd $(MD)/n14_scdwn.dd \
		$(MD)/scdwp.dr $(MD)/p_scdwp.dd \
		$(MD)/pipeman.mn $(MD)/piper.dr $(MD)/pipe.dd \
		$(MD)/clock_60hz $(MD)/clock2_dw \
		$(MD)/sysgo_dd

BOOTFILE_WINTERM	= $(MD)/krnp2 $(MD)/ioman $(MD)/init \
		$(MD)/rbf.mn \
		$(MD)/rbdw.dr $(MD)/dwio.sb \
		$(MD)/ddx0.dd $(MD)/x1.dd $(MD)/x2.dd $(MD)/x3.dd \
		$(MD)/scf.mn \
		$(MD)/vtio.dr \
		$(MD)/keydrv_cc3.sb $(MD)/joydrv_joy.sb $(MD)/snddrv_cc3.sb \
		$(MD)/cowin.io $(MD)/covdg.io \
		$(MD)/term_win80.dt $(MD)/w1.dw $(MD)/w2.dw $(MD)/w3.dw $(MD)/w4.dw \
		$(MD)/w5.dw $(MD)/w6.dw $(MD)/w7.dw \
		$(MD)/scdwn.dr \
		$(MD)/n_scdwn.dd \
		$(MD)/n1_scdwn.dd $(MD)/n2_scdwn.dd $(MD)/n3_scdwn.dd \
		$(MD)/n4_scdwn.dd $(MD)/n5_scdwn.dd $(MD)/n6_scdwn.dd \
		$(MD)/n7_scdwn.dd $(MD)/n8_scdwn.dd $(MD)/n9_scdwn.dd \
		$(MD)/n10_scdwn.dd $(MD)/n11_scdwn.dd $(MD)/n12_scdwn.dd \
		$(MD)/n13_scdwn.dd $(MD)/n14_scdwn.dd \
		$(MD)/scdwp.dr $(MD)/p_scdwp.dd \
		$(MD)/pipeman.mn $(MD)/piper.dr $(MD)/pipe.dd \
		$(MD)/clock_60hz $(MD)/clock2_dw \
		$(MD)/sysgo_dd

BOOTFILE_VDGTERM	= $(MD)/krnp2 $(MD)/ioman $(MD)/init \
		$(MD)/rbf.mn \
		$(MD)/rbdw.dr $(MD)/dwio.sb \
		$(MD)/ddx0.dd $(MD)/x1.dd $(MD)/x2.dd $(MD)/x3.dd \
		$(MD)/scf.mn \
		$(MD)/vtio.dr \
		$(MD)/keydrv_cc3.sb $(MD)/joydrv_joy.sb $(MD)/snddrv_cc3.sb \
		$(MD)/covdg.io \
		$(MD)/term_vdg.dt \
		$(MD)/scdwn.dr \
		$(MD)/n_scdwn.dd \
		$(MD)/n1_scdwn.dd $(MD)/n2_scdwn.dd $(MD)/n3_scdwn.dd \
		$(MD)/n4_scdwn.dd $(MD)/n5_scdwn.dd $(MD)/n6_scdwn.dd \
		$(MD)/n7_scdwn.dd $(MD)/n8_scdwn.dd $(MD)/n9_scdwn.dd \
		$(MD)/n10_scdwn.dd $(MD)/n11_scdwn.dd $(MD)/n12_scdwn.dd \
		$(MD)/n13_scdwn.dd $(MD)/n14_scdwn.dd \
		$(MD)/clock_60hz $(MD)/clock2_dw \
		$(MD)/sysgo_dd

SUPPORTFILES	= startup
BOOTFILE	= $(BOOTFILE_DWTERM)

ALLOBJS		= $(CMDS) $(CMDS_DW) $(CMDS_THESIS)

all:	makedepends $(ALLOBJS)

makedepends:
	cd $(LEVEL2)/coco3; make
	cd $(3RDPARTY)/packages/drivewire; make
	cd $(3PBOISY); make

clean:	dskclean
	-$(RM) $(CMDS_THESIS)

dsk:	all $(DSKS)

$(DSK):
	cd $(3RDPARTY)/utils/supercomm; make
	$(RM) $@
	$(CD) $(LEVEL2)/coco3; make
	$(OS9FORMAT_SS80) -q $@ -n"NitrOS-9 Level 2 DriveWire Server"
	$(MERGE) $(BOOTFILE)>os9boot
	$(MERGE) $(KERNEL)>kernel
	$(OS9GEN) $@ -b=os9boot -t=kernel
	$(RM) os9boot kernel
	$(MAKDIR) $@,CMDS
	$(MAKDIR) $@,SYS
	$(CP) $(CMDS) $(CMDS_DW) $(CMDS_THESIS) $@,CMDS
	$(foreach file, $(CMDS) $(CMDS_DW) $(CMDS_THESIS), $(OS9ATTR_EXEC) $@,CMDS/$(notdir $(file));)
	$(MAKDIR) $@,SRC
	$(CPL) $(SRC_THESIS) $@,SRC
	$(CP) $(3RDPARTY)/utils/supercomm/supercomm $@,CMDS
	$(OS9ATTR_EXEC) $@,CMDS/supercomm
	$(CPL) $(SYSTEXT) $@,SYS
	$(foreach file, $(SYSTEXT), $(OS9ATTR_TEXT) $@,SYS/$(file);)
	$(CPL) $(SUPPORTFILES) $@,.
	$(foreach file, $(SUPPORTFILES), $(OS9ATTR_TEXT) $@,$(file);)

dskcopy: dsk
	$(CP) $(DSKS) $(DSKDIR)

dskclean:
	-$(RM) $(DSKS)

info:
	@$(ECHO) "*** NitrOS-9/6309 Level 2 DriveWire Server ***"
	@$(foreach dsk, $(DSKS), $(ECHO) $(dsk);)
