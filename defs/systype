         IFNE  SYSTYPE-1

SYSTYPE  set   1

********************************************************************
* SysType - NitrOS-9 System Specific Definitions
*
* $Id$
*
* Edt/Rev  YYYY/MM/DD  Modified by
* Comment
* ------------------------------------------------------------------
*          1998/10/13  Boisy G. Pitre
* Added defs by Bruce Isted from his Eliminator archive.
*
*          1998/10/31  Boisy G. Pitre
* Merged cc3global.defs into this file.
*
*          2002/04/30  Boisy G. Pitre
* Merged Level One and Level Two sysdefs.
*
*          2002/06/22  Boisy G. Pitre
* Removed PIA.U4 and PIA.U8, improved comments
*
*          2003/11/05  Robert Gault
* Made changes in window globals and grfdrv memory to handle regW
* in 6809 systems.
*
*          2003/11/30  Boisy G. Pitre
* Statics now are prefaced with V. to identify them easier in source.
*
*          2004/07/18  Boisy G. Pitre
* Moved CoCo 3 Window stuff into cc3iodefs

         nam   SysType
         IFEQ  Level-1
         ttl   NitrOS-9 Level 1 System Type Definitions
         ELSE
         IFEQ  Level-2
         ttl   NitrOS-9 Level 2 System Type Definitions
         ENDC
         IFEQ  Level-3
         ttl   NitrOS-9 Level 3 System Type Definitions
         ENDC
         ENDC


**********************
* CPU Type Definitions
*
Color    set   1
Color3   set   2
         IFEQ  Level-1
CPUType  set   Color
         ELSE
CPUType  set   Color3
         ENDC


******************************
* Clock Speed Type Definitions
*
OneMHz   equ   1
TwoMHz   equ   2
         IFEQ  CPUType-Color
CPUSpeed set   OneMHz
         ELSE
CPUSpeed set   TwoMHz
         ENDC


**********************************
* Power Line Frequency Definitions
*
Hz50     equ   1          Assemble clock for 50 hz power
Hz60     equ   2          Assemble clock for 60 hz power
PwrLnFrq set   Hz60       Set to Appropriate freq


**********************************
* Ticks per second
*
         IFEQ  PwrLnFrq-Hz50
TkPerSec set   50
         ELSE
TkPerSec set   60
         ENDC


******************
* ACIA type set up
*
         org   1
ACIA6850 rmb   1          MC6850 acia.
ACIA6551 rmb   1          SY6551 acia.
ACIA2661 rmb   1          SC2661 acia.
ACIATYPE set   ACIA6551


****************************************
* Special character Bit position equates
*
SHIFTBIT equ   %00000001
CNTRLBIT equ   %00000010
ALTERBIT equ   %00000100
UPBIT    equ   %00001000
DOWNBIT  equ   %00010000
LEFTBIT  equ   %00100000
RIGHTBIT equ   %01000000
SPACEBIT equ   %10000000


******************
* Device addresses for miscellaneous hardware
*
A.AciaP  set   $FF68      Aciapak Address
A.ModP   set   $FF6C      ModPak Address
DPort    set   $FF40      Disk controller base address
MPI.Slct set   $FF7F      Multi-Pak slot select
MPI.Slot set   $03        Multi-Pak default slot
PIA0Base equ   $FF00
PIA1Base equ   $FF20


******************
* VDG Devices
*
A.TermV  set   $FFC0      VDG Term
A.V1     set   $FFC1      Possible additional VDG Devices
A.V2     set   $FFC2
A.V3     set   $FFC3
A.V4     set   $FFC4
A.V5     set   $FFC5
A.V6     set   $FFC6
A.V7     set   $FFC7


         IFEQ  Level-1

*************************************************
*
* NitrOS-9 Level 1 Section
*
*************************************************

HW.Page  set   $FF        Device descriptor hardware page

         ELSE

*************************************************
*
* NitrOS-9 Level 2 Section
*
*************************************************

****************************************
* Dynamic Address Translator Definitions
*
DAT.BlCt equ   8          D.A.T. blocks/address space
DAT.BlSz equ   (256/DAT.BlCt)*256 D.A.T. block size
DAT.ImSz equ   DAT.BlCt*2 D.A.T. Image size
DAT.Addr equ   -(DAT.BlSz/256) D.A.T. MSB Address bits
DAT.Task equ   $FF91      Task Register address
DAT.TkCt equ   32         Number of DAT Tasks
DAT.Regs equ   $FFA0      DAT Block Registers base address
DAT.Free equ   $333E      Free Block Number
DAT.BlMx equ   $3F        Maximum Block number
DAT.BMSz equ   $40        Memory Block Map size
DAT.WrPr equ   0          no write protect
DAT.WrEn equ   0          no write enable
SysTask  equ   0          Coco System Task number
IOBlock  equ   $3F
ROMBlock equ   $3F
IOAddr   equ   $7F
ROMCount equ   1          number of blocks of ROM (High RAM Block)
RAMCount equ   1          initial blocks of RAM
MoveBlks equ   DAT.BlCt-ROMCount-2 Block numbers used for copies
BlockTyp equ   1          chk only first bytes of RAM block
ByteType equ   2          chk entire block of RAM
Limited  equ   1          chk only upper memory for ROM modules
UnLimitd equ   2          chk all NotRAM for modules
* NOTE: this check assumes any NotRAM with a module will
*       always start with $87CD in first two bytes of block
RAMCheck equ   BlockTyp   chk only beg bytes of block
ROMCheck equ   Limited    chk only upper few blocks for ROM
LastRAM  equ   IOBlock    maximum RAM block number

***************************
* Color Computer 3 Specific
*
MappedIO equ   true       (Actually False but it works better this way)

********************
* Hardware addresses
*
GIMERegs equ   $FF00      Base address of GIME registers
IrqEnR   equ   $FF92      GIME IRQ enable/status register
BordReg  equ   $FF9A      Border color register
PalAdr   equ   $FFB0      Palette registers

HW.Page  set   $07        Device descriptor hardware page

         ENDC
         ENDC

