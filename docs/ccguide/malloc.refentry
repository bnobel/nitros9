<refentry id="malloc">
<refnamediv>
<refname>Malloc</refname>
<refname>Free</refname>
<refname>Calloc</refname>
<refpurpose>memory allocation</refpurpose>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcprototype>
  <funcdef>char *<function>malloc</function></funcdef>
  <paramdef>unsigned <parameter>size</parameter></paramdef>
</funcprototype>

<funcprototype>
  <funcdef><function>free</function></funcdef>
  <paramdef>char *<parameter>ptr</parameter></paramdef>
</funcprototype>

<funcprototype>
  <funcdef>char *<function>calloc</function></funcdef>
  <paramdef>unsigned<parameter>nel</parameter></paramdef>
  <paramdef>unsigned<parameter>elsize</parameter></paramdef>
</funcprototype>
</funcsynopsis>

</refsynopsisdiv>

<refsect1><title>Description</title>
<para>
Malloc returns a pointer to a block of at least "size" free bytes.
</para>
<para>
Free requires a pointer to a block that has been allocated by
malloc; it frees the space to be allocated again.
</para>
<para>
Calloc allocates space for an array. Nel is the number of
elements in the arrary, and elsize is the size of each element.
Calloc initializes the space to zero.
</para>
</refsect1>
<refsect1><title>Diagnostics</title>
<para>
Malloc, free, and calloc return NULL(0) if no free memory can
be found or if there was an error.
</para>
</refsect1>
</refentry>
