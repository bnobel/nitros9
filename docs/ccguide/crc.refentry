<refentry id="crc">
<refnamediv>
<refname>Crc</refname>
<refpurpose>compute a cyclic redundancy count</refpurpose>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcprototype>
  <funcdef><function>crc</function></funcdef>
  <paramdef>char *<parameter>start</parameter></paramdef>
  <paramdef>int <parameter>count</parameter></paramdef>
  <paramdef>char <parameter>accum</parameter>[3]</paramdef>
</funcprototype>
</funcsynopsis>

</refsynopsisdiv>

<refsect1><title>Assembler Equivalent</title>
<para>
os9 F$CRC
</para>
</refsect1>

<refsect1><title>Description</title>
<para>
This call accumulates a crc into a three byte array at "accum"
for "count" bytes starting at "start". All three bytes of
"accum" should be initialized to 0xff before the first call to
"crc()". However, repeated calls can be subsequently made to
cover an entire module. If the result is to be used as an OS-9
module crc, it should have its bytes complemented before
insertion at the end of the module.
</para>
</refsect1>
</refentry>
