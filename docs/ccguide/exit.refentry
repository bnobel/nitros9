<refentry id="exit">
<refnamediv>
<refname>Exit</refname>
<refname>_Exit</refname>
<refpurpose>task termination</refpurpose>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcprototype>
  <funcdef><function>exit</function></funcdef>
  <paramdef>int <parameter>status</parameter></paramdef>
</funcprototype>

<funcprototype>
  <funcdef><function>_exit</function></funcdef>
  <paramdef>int <parameter>status</parameter></paramdef>
</funcprototype>
</funcsynopsis>

</refsynopsisdiv>

<refsect1><title>Assembler Equivalent</title>
<para>
os9 F$EXIT
</para>
</refsect1>

<refsect1><title>Description</title>
<para>
Exit is the normal means of terminating a task. Exit does any
cleaning up operations required before terminating, such as
flushing out any file buffers (see Standard i/o), but _exit
does not.
</para>
<para>
A task finishing normally, that is returning from "main()",
is equivalent to a call - "exit(0)".
</para>
<para>
The status passed to exit is available to the parent task if it
is executing a "wait".
</para>
</refsect1>

<refsect1><title>See Also</title>
<para>
<link linkend="wait">wait()</link>
</para>
</refsect1>
</refentry>
