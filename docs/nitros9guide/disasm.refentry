<refentry id="disasm">
<refnamediv>
<refname>DISASM</refname>
<refpurpose>NitrOS-9 Module Disassembler</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>disasm</command>
<group>
<arg choice="opt">-m <replaceable>module name</replaceable></arg>
<arg choice="plain"><replaceable>filename</replaceable></arg>
</group>
<arg choice="opt">options</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para>
Disasm was written to hack apart NitrOS-9 system modules,command modules,
file managers and device drivers/descriptors either from memory or disk.
Unlike most other disassemblers, <command>disasm</command> is a two pass disassembler, creating
output using only referenced labels. This output can be redirected to a file
and (after modifications if desired) then re-assembled.
</para>
<para>
Disasm provides completely commented disassembly of Device Descriptors...
very useful for building a customized boot file.
</para>
</refsect1>
<refsect1><title>Options</title>
<variablelist>
<varlistentry>
<term>disasm -m <replaceable>module name</replaceable></term>
<listitem>
<para>
will link to module in memory - if not found,will load module from exec
directory and then link to it...after disassembly,it will attempt to
unlink the module.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>disasm <replaceable>pathlist/module name</replaceable></term>
<listitem>
<para>
will 'read' the module from the specified path without loading.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>other options:</term>
<listitem>
<para>
o = display line number,address,object code &amp; source code... useful for 
hard to crack modules with data embedded in the middle.
</para>
<para>
x = look for module in execution directory.
</para>
</listitem>
</varlistentry>
</variablelist>
<para>
ANY combination of options is allowed (upper or lower case) but they *must*
immediately follow the '-' and there must be no spaces separating the options.
</para>
</refsect1>
</refentry>
